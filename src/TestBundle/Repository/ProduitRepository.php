<?php

namespace TestBundle\Repository;

/**
 * ProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByEtatProdAdherent(){
        $query=$this->getEntityManager()
            ->createQuery('select m.idpr,m.nomp,m.prix,m.description,m.imagep,m.enpromo,concat(u.nom,u.prenom) as username,c.nomcp
                 from TestBundle:Produit m,TestBundle:Categorieprod c,TestBundle:FosUser u where m.etatpr=1 and u.id=m.iduser
                  and m.idcp=c.idcp');
        return $query->getResult();
    }

    public function findByEtatProdAdmin(){
        $query=$this->getEntityManager()
            ->createQuery('select m.idpr,m.nomp,m.prix,m.description,m.imagep,concat(u.nom,u.prenom) as username,c.nomcp
                 from TestBundle:Produit m,TestBundle:Categorieprod c,TestBundle:FosUser u where m.etatpr=0 and u.id=m.iduser
                  and m.idcp=c.idcp');
        return $query->getResult();
    }
    public function findMesProduit($fosusers){


        $query=$this->getEntityManager()
            ->createQuery("select m.idpr,m.nomp,m.prix,m.description,m.imagep,m.enpromo,m.etatpr,concat(u.nom,u.prenom) as username,c.nomcp
                 from TestBundle:Produit m,TestBundle:Categorieprod c,TestBundle:FosUser u where m.etatpr=1 and u.id=m.iduser
                  and m.idcp=c.idcp and u.id='$fosusers'");
        return $query->getResult();
    }
    public function compterProduit(){
        $query=$this->getEntityManager()
        ->createQuery("select count (p.idpr) from TestBundle:Produit p  where p.etatpr=1  ");
         return $query->getResult();
    }
    public function compterMesProduit($fosuser){
        $query=$this->getEntityManager()
            ->createQuery("select count (p.idpr) from TestBundle:Produit p  where p.etatpr=1 and p.iduser='$fosuser'  ");
        return $query->getResult();
    }
    public function compterFiltredProduit($idcat){
        $query=$this->getEntityManager()
            ->createQuery("select count (p.idpr) from TestBundle:Produit p  where p.etatpr=1 and p.idcp='$idcat'  ");
        return $query->getResult();
    }
    public function compterMyFiltredProduit($idcat,$fosuser){
        $query=$this->getEntityManager()
            ->createQuery("select count (p.idpr) from TestBundle:Produit p  where p.etatpr=1 and p.idcp='$idcat' AND p.iduser='$fosuser' ");
        return $query->getResult();
    }
    public function compterRecProduit($fosusers){
        $query=$this->getEntityManager()
            ->createQuery("SELECT count(a) FROM TestBundle:Produit a where a.etatpr=1 and a.idcp in (SELECT IDENTITY(f.idcp) from TestBundle:Favoris f WHERE f.iduser='$fosusers')");
        return $query->getResult();
    }
    public function findBCats($nom){
        $query=null ;
        if($nom <> null) {
            $query = $this->getEntityManager()
                ->createQuery("select m.idpr,m.nomp,m.prix,m.description,m.imagep,concat(u.nom,u.prenom) as username,c.nomcp
                 from TestBundle:Produit m,TestBundle:Categorieprod c,TestBundle:FosUser u where m.etatpr=0 and u.id=m.iduser
                  and m.idcp=c.idcp AND c.nomcp LIKE '$nom%' ");
        }else{
            $query = $this->getEntityManager()
                ->createQuery("select m.idpr,m.nomp,m.prix,m.description,m.imagep,concat(u.nom,u.prenom) as username,c.nomcp
                 from TestBundle:Produit m,TestBundle:Categorieprod c,TestBundle:FosUser u where m.etatpr=0 and u.id=m.iduser
                  and m.idcp=c.idcp ");
        }
        return $query->getResult();

    }
    public function compterProduitParPrix($prix){
        $query=$this->getEntityManager()
            ->createQuery("SELECT count(a) FROM TestBundle:Produit a where a.etatpr=1 AND a.prix='$prix'");
        return $query->getResult();

    }



}
